program PF_SRSRGA_ON
option +r;

short i;
short PvScan[9];
int PvScan_M2;
int FL_ON;
int FL_1;
int FL_0;
int CDEM_ON;
int CDEM_1;
int CDEM_0;
float FL_READ;
int FL_READ_ACT;
int ID;
int IN0;
int CA;


assign PvScan to {
	"CLB_PF_RGA_M2_ION.SCAN", 
        "CLB_PF_RGA_M4_ION.SCAN",
        "CLB_PF_RGA_M12_ION.SCAN",
        "CLB_PF_RGA_M18_ION.SCAN",
        "CLB_PF_RGA_M28_ION.SCAN",
        "CLB_PF_RGA_M32_ION.SCAN",
        "CLB_PF_RGA_M40_ION.SCAN",
        "CLB_PF_RGA_M44_ION.SCAN",
        "CLB_PF_RGA_M55_ION.SCAN"
        };


assign FL_ON to "CLB_PF_RGA_FL_ON";
monitor FL_ON;
assign CDEM_ON to "CLB_PF_RGA_CDEM_ON";
monitor CDEM_ON;

assign FL_READ to "CLB_PF_RGA_FL";
monitor FL_READ;

assign FL_1 to "CLB_PF_RGA_FL_1.PROC";
assign FL_0 to "CLB_PF_RGA_FL_0.PROC";
assign CDEM_1 to "CLB_PF_RGA_CDEM_1.PROC";
assign CDEM_0 to "CLB_PF_RGA_CDEM_0.PROC";
assign FL_READ_ACT to "CLB_PF_RGA_FL.PROC";

assign ID to "CLB_PF_RGA_ID.PROC";
assign IN0 to "CLB_PF_RGA_IN0.PROC";
assign CA to "CLB_PF_RGA_CA.PROC";

ss SRSRGA {

    state INIT {
        when(delay(2.0)){
            ID = 1;
            pvPut(ID);
            printf("PF_RGA ID READ ACTUATED !!\n");
        } state INIT_1
    }

    state INIT_1 { 
        when(delay(2.0)){ 
            FL_0 = 1;
            pvPut(FL_0);
            printf("PF_RGA FIL OFF ACTUATED !!\n");
        } state INIT_2
    }
 
    state INIT_2 {  
        when(delay(5.0)){
            CA = 1;
            pvPut(CA);
            printf("PF_RGA CALIB. ACTUATED !!\n");
        } state FIL_OFF
    }

    state FIL_OFF {
        when(FL_ON == 1 ){
            FL_1 = 1;
            pvPut(FL_1);
            printf("PF_RGA FIL ON !! \n");            
        } state  DELAY

        when(CDEM_ON == 1){
            CDEM_ON = 0;
	    pvPut(CDEM_ON);
        } state FIL_OFF 
    }

    state DELAY {
        when(delay(5.0) ){
           FL_READ_ACT = 1;
           pvPut(FL_READ_ACT);
           pvGet(FL_READ); 
        } state DELAY2
    }

    state DELAY2 {
        when(FL_READ > 0.9 && delay(2.0)){
            for (i = 0; i < 10; i++)
            {
              PvScan[i] = 4;
              pvPut(PvScan[i]);
            }
            printf("PF_RGA FL_READ = %lf  \n",FL_READ);
	    printf("PF_RGA SCAN Activated !! \n");
        } state FIL_ON
        
	 when(FL_READ <= 0.9 && delay(2.0)){
	    for (i = 0; i < 10; i++)
            {
              PvScan[i] = 0;
              pvPut(PvScan[i]);
            }
            printf("PF_RGA FL_READ = %lf  \n",FL_READ);
            printf("PF_RGA SCAN Passive !! \n");
        } state FIL_ON
    }


    state FIL_ON {
        when(FL_ON == 0){ 
            FL_0 = 1; 
            pvPut(FL_0); 
            for (i = 0; i < 10; i++)
            {
              PvScan[i] = 0;
              pvPut(PvScan[i]);
            }
            CDEM_0 = 1;
            pvPut(CDEM_0);
            CDEM_ON = 0;
            pvPut(CDEM_ON);
            FL_READ_ACT = 1;
            pvPut(FL_READ_ACT);
       printf("PF_RGA FIL OFF !! \n");
        } state FIL_OFF 

       when(CDEM_ON == 1 ){
            CDEM_1 = 1;
            pvPut(CDEM_1);
        printf("PF_RGA CDEM ON ++ \n");
        } state CDEM_ON

       when(FL_READ <= 0.9 ){
            FL_ON = 0;
            pvPut(FL_ON);
            FL_0 = 1;
            pvPut(FL_0);
        printf("PF_RGA FIL Not ON \n");
        } state FIL_OFF
    }

    
    state CDEM_ON {
        when(FL_ON == 0){
            FL_0 = 1;
            pvPut(FL_0);

            for (i = 0; i < 10; i++)
            {
              PvScan[i] = 0;
              pvPut(PvScan[i]);
            }

	    CDEM_0 = 1;
            pvPut(CDEM_0); 
            CDEM_ON = 0;
            pvPut(CDEM_ON);
            FL_READ_ACT = 1;
            pvPut(FL_READ_ACT);        
       printf("PF_RGA FIL OFF !! \n");   
        } state FIL_OFF

        when(CDEM_ON == 0){
	    CDEM_0 = 1;
            pvPut(CDEM_0);
        printf("PF_RGA CDEM OFF -- \n");
        } state CDEM_OFF
    }

    state CDEM_OFF {
        when(FL_ON == 0){
            FL_0 = 1;
            pvPut(FL_0);
            for (i = 0; i < 10; i++)
            {
              PvScan[i] = 0;
              pvPut(PvScan[i]);
            }
	    FL_READ_ACT = 1;
            pvPut(FL_READ_ACT);
            CDEM_0 = 1;
            pvPut(CDEM_0);
            CDEM_ON = 0;
            pvPut(CDEM_ON);
       printf("PF_RGA FIL OFF !!\n");
        } state FIL_OFF
       
        when(CDEM_ON == 1 ){
            CDEM_1 = 1;
            pvPut(CDEM_1);
        printf("PF_RGA CDEM ON ++ \n");
        } state CDEM_ON
    }

}
