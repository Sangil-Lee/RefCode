program sncECEHRCal

option +r;
option -c;

%% #include <string.h>
%% #include <stdio.h>
%% #include <sys/types.h>
%% #include <sys/stat.h>
%% #include <mdslib.h>
%% #include <mdsdescrip.h>
%% #include <mdsshr.h>
%% #include <epicsThread.h>


%% #define statusOk(status)    ((status) & 1)
%% int dtypeFloat = DTYPE_FLOAT;
%% int dtypeLong = DTYPE_LONG;


%% int status = 0;
%% int tstat;
%% int null = 0;
%% int len;
%% char buf2[128];
%% int socket;
%% /* int idesc = descr(&dtypeLong, &tstat, &null); */
%% int idesc;
%% int i;

%% #define ACQ196               "acq196_425"
%% #define A425_1               "a425_1"
%% #define A425_2               "a425_2"
%% #define A425_3               "a425_3"


int ltuShotStart;


int calStart;
int calStartNumber;
int calCurrentNumber;
int calStopNumber;

assign ltuShotStart to "ECEHR_LTU_shotStart";

assign calStart to "ECEHR_CAL_MODE_START";
assign calStartNumber to "ECEHR_CAL_START_NUMBER";
assign calCurrentNumber to "ECEHR_CAL_CURRENT_NUMBER";
assign calStopNumber to "ECEHR_CAL_STOP_NUMBER";

monitor ltuShotStart;

monitor calStart;
monitor calStartNumber;
monitor calCurrentNumber;
monitor calStopNumber;

evflag calStartf;
sync calStart calStartf;

evflag calCurrentNumberf;
sync calCurrentNumber calCurrentNumberf;


ss ss1 {
    state init {
	when (TRUE) {
	    printf("sncECE CAL: Startup delay over\n");
	} state eceSetArm
    }
    state eceSetArm {
	when (efTestAndClear(calStartf)) {
		if(calStart == 1){
			if(calCurrentNumber < calStartNumber){
				calCurrentNumber = calStartNumber;
                        	pvPut(calCurrentNumber);
			} else if (calCurrentNumber >= calStartNumber) {
				calCurrentNumber = calCurrentNumber + 1;
                        	pvPut(calCurrentNumber);
			}
			system("/usr/local/bin/acqcmd -s 100 set.route d0 in lemo out fpga");
			system("/usr/local/bin/acqcmd -b 100 setExternalClock DI0 2");
			printf("sncECECAL Clock External In 1MHz : N=2 Local Sample Rate 500kHz \n");
			system("/usr/local/bin/acqcmd -b 100 set.channelBlockMask 111");
			system("/usr/local/bin/acqcmd -s 100 set.route d3 in lemo out fpga");
			system("/usr/local/bin/acqcmd -b 100 set.trig DI3 rising");
			system("/usr/local/bin/acqcmd -b 100 setMode SOFT_CONTINUOUS 1024");
			system("/usr/local/bin/acqcmd -b 100 setArm");
			printf("sncECECAL : set Arming done\n");
	   		%% epicsThreadSleep(1.);
			if(ltuShotStart == 0) {
				ltuShotStart=1;
				pvPut(ltuShotStart);	
			} else {
				ltuShotStart=0;
                                pvPut(ltuShotStart);
			}
	   		printf("sncECECAL : during data acquisition \n");
	   		%% epicsThreadSleep(11.);
			system("/usr/local/bin/acqcmd -b 100 setAbort");
	    		printf("sncECECAL Test : set Aborting done\n");
	   		%% epicsThreadSleep(18.);
			if(calCurrentNumber >= calStopNumber) {
				calStart = 0;
				pvPut(calStart);
			}
		}
	} state eceSetArm 
    }
}
ss setCurrentShot {
	state init {
		when (TRUE) {
	    		printf("sncECE CAL: Startup delay over\n");
		} state setShotNumber
	}
	state setShotNumber {
		when(efTestAndClear(calCurrentNumberf)) {
			if(calStart == 1){
                        %%     sprintf(buf2, "TCL(\"set current %s %d\")",ACQ196,pVar->calCurrentNumber);
                        %%     status = MdsValue(buf2, &idesc, &null, &len);
                        %%     printf("MDSplus ACQ196 Current Status : %d\n",status);
                        %%     if ( !statusOk(status) ){
                        %%             printf("Error TCL command: set current : %s.\n",MdsGetMsg(status));
                        %%     }
                        %%     else printf(" Set Current Shot Number ACQ196 successed %d\n", pVar->calCurrentNumber);

                        %%     sprintf(buf2, "TCL(\"set current %s %d\")",A425_1,pVar->calCurrentNumber);
                        %%     status = MdsValue(buf2, &idesc, &null, &len);
                        %%     printf("MDSplus A425_1 Current Status : %d\n",status);
                        %%     if ( !statusOk(status) ){
                        %%             printf("Error TCL command: set current : %s.\n",MdsGetMsg(status));
                        %%     }
                        %%     else printf(" Set Current Shot Number A425_1 successed %d\n", pVar->calCurrentNumber);

                        %%     sprintf(buf2, "TCL(\"set current %s %d\")",A425_2,pVar->calCurrentNumber);
                        %%     status = MdsValue(buf2, &idesc, &null, &len);
                        %%     printf("MDSplus A425_2 Current Status : %d\n",status);
                        %%     if ( !statusOk(status) ){
                        %%             printf("Error TCL command: set current : %s.\n",MdsGetMsg(status));
                        %%     }
                        %%     else printf(" Set Current Shot Number A425_2 successed %d\n", pVar->calCurrentNumber);

                        %%     sprintf(buf2, "TCL(\"set current %s %d\")",A425_3,pVar->calCurrentNumber);
                        %%     status = MdsValue(buf2, &idesc, &null, &len);
                        %%     printf("MDSplus A425_3 Current Status : %d\n",status);
                        %%     if ( !statusOk(status) ){
                        %%             printf("Error TCL command: set current : %s.\n",MdsGetMsg(status));
                        %%     }
                        %%     else printf(" Set Current Shot Number A425_3 successed %d\n", pVar->calCurrentNumber);
			}
		} state setStream
	}
	state setStream {
		when(TRUE){
			if(calStart == 1){
				system("/home/dt100/bin/acq196_425_newshot");
				printf("sncECECAL : set Create Tree done\n");
	   			%% epicsThreadSleep(1.);
				system("export rtmt_path=/home/dt100/TEST/KSTAR/bin/rtmt");
				printf("sncECECAL : set Stream done\n");
				system("/home/dt100/bin/stream-to-elastic-store | /home/dt100/TEST/KSTAR/bin/run-farm3");
				printf("sncECECAL : end of Stream done\n");
			}
		} state setShotNumber
	}
}
