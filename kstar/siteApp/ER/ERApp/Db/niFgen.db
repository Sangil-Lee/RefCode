#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


# 2009. 5. 27  first create
# 2009. 10. 01  modify for vdct, insert " "
# 2009. 10. 8 add signal export to xxx
# 2009. 10. 13 change sig_gen
record(bo, "$(SYS)_$(DEV):ABORT_GEN") {
  field(DESC, "Binary output")
  field(DTYP, "NIfgen BO Control")
  field(OUT, "@$(DEV) abort_gen")
}

record(bo, "$(SYS)_$(DEV):SIG_GEN") {
  field(DESC, "Binary output")
  field(DTYP, "NIfgen BO Control")
  field(OUT, "@$(DEV) gen")
  field(ZNAM, "0")
  field(ONAM, "1")
  field(PINI, "YES")
  field(VAL, "0")
}

###############################################################
record(ao, "$(SYS)_$(DEV):TEST_PUT") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) test_put")
}

record(ao, "$(SYS)_$(DEV):OUTPUT_MODE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) output_mode")
}

record(ao, "$(SYS)_$(DEV):CLOCK_SOURCE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) clk_source")
}

record(ao, "$(SYS)_$(DEV):SAMPLE_RATE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) smpl_rate")
  field(PINI, "NO")
  field(VAL, "100000")
}

record(ao, "$(SYS)_$(DEV):CLOCK_MODE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) clk_mode")
}

record(ao, "$(SYS)_$(DEV):TRIG_TYPE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) trig_type")
}

record(ao, "$(SYS)_$(DEV):EXPORT_SIG_IN") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) export_in")
}

record(ao, "$(SYS)_$(DEV):EXPORT_SIG_TO") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) export_to")
}

###############################################################
record(ao, "$(SYS)_$(DEV):CFG_STD_WF") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) std_wf")
}

record(ao, "$(SYS)_$(DEV):CFG_ARB_WF") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) arb_wf")
}

record(ao, "$(SYS)_$(DEV):WFM_TYPE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) wfm_type")
}

record(ao, "$(SYS)_$(DEV):AMPLITUDE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) amp")
  field(PINI, "YES")
  field(VAL, "10")
}

record(ao, "$(SYS)_$(DEV):DC_OFFSET") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) dc_offset")
  field(PINI, "YES")
  field(VAL, "0")
}

record(ao, "$(SYS)_$(DEV):FREQ") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) freq")
  field(PINI, "YES")
  field(VAL, "40000")
}

record(ao, "$(SYS)_$(DEV):PHASE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) phase")
}

record(ao, "$(SYS)_$(DEV):ENABLE_OUTPUT") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) out_enable")
}

#record(ao, "$(SYS)_$(DEV):CREATE_WF_DL") {
#  field(DESC, "Analog output")
#  field(DTYP, "NIfgen Control")
#  field(OUT, "@$(DEV) $(CHX) create_wf_dl")
#}
record(ao, "$(SYS)_$(DEV):CH_GAIN") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) arb_chgain")
}

record(ao, "$(SYS)_$(DEV):ARB_OFFSET") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) arb_offset")
}

record(ao, "$(SYS)_$(DEV):TRIG_MODE") {
  field(DESC, "Analog output")
  field(DTYP, "NIfgen Control")
  field(OUT, "@$(DEV) $(CHX) trig_mode")
}

#*****************************************************************************
#Stringout record & ETC.
record(stringout, "$(SYS)_$(DEV):WF_FILENAME") {
  field(DESC, "string out")
  field(DTYP, "NIfgen String Control")
  field(OUT, "@$(DEV) $(CHX) wfm_name")
}

record(stringout, "$(SYS)_$(DEV):TRIG_SOURCE") {
  field(DESC, "string out")
  field(DTYP, "NIfgen String Control")
  field(OUT, "@$(DEV) trig_src")
}

record(ai, "$(SYS)_$(DEV):ERROR_CODE") {
  field(DESC, "AI")
  field(SCAN, "I/O Intr")
  field(DTYP, "NIfgen Raw Reading")
  field(INP, "@$(DEV) error_code")
  field(HIHI, "0.9")
  field(HHSV, "MAJOR")
}

#! Further lines contain data used by VisualDCT
#! View(0,0,1.3)
#! Record("$(SYS)_$(DEV):ABORT_GEN",20,22,0,0,"$(SYS)_$(DEV):ABORT_GEN")
#! Record("$(SYS)_$(DEV):SIG_GEN",40,147,0,0,"$(SYS)_$(DEV):SIG_GEN")
#! Record("$(SYS)_$(DEV):TEST_PUT",220,2,0,0,"$(SYS)_$(DEV):TEST_PUT")
#! Record("$(SYS)_$(DEV):OUTPUT_MODE",740,22,0,0,"$(SYS)_$(DEV):OUTPUT_MODE")
#! Record("$(SYS)_$(DEV):CLOCK_SOURCE",980,22,0,0,"$(SYS)_$(DEV):CLOCK_SOURCE")
#! Record("$(SYS)_$(DEV):SAMPLE_RATE",1200,14,0,0,"$(SYS)_$(DEV):SAMPLE_RATE")
#! Record("$(SYS)_$(DEV):CLOCK_MODE",1460,22,0,0,"$(SYS)_$(DEV):CLOCK_MODE")
#! Record("$(SYS)_$(DEV):TRIG_TYPE",1700,22,0,0,"$(SYS)_$(DEV):TRIG_TYPE")
#! Record("$(SYS)_$(DEV):EXPORT_SIG_IN",1940,22,0,0,"$(SYS)_$(DEV):EXPORT_SIG_IN")
#! Record("$(SYS)_$(DEV):EXPORT_SIG_TO",2180,22,0,0,"$(SYS)_$(DEV):EXPORT_SIG_TO")
#! Record("$(SYS)_$(DEV):CFG_STD_WF",2420,22,0,0,"$(SYS)_$(DEV):CFG_STD_WF")
#! Record("$(SYS)_$(DEV):CFG_ARB_WF",2660,22,0,0,"$(SYS)_$(DEV):CFG_ARB_WF")
#! Record("$(SYS)_$(DEV):WFM_TYPE",2900,22,0,0,"$(SYS)_$(DEV):WFM_TYPE")
#! Record("$(SYS)_$(DEV):AMPLITUDE",220,174,0,0,"$(SYS)_$(DEV):AMPLITUDE")
#! Record("$(SYS)_$(DEV):DC_OFFSET",460,114,0,0,"$(SYS)_$(DEV):DC_OFFSET")
#! Record("$(SYS)_$(DEV):FREQ",20,14,0,0,"$(SYS)_$(DEV):FREQ")
#! Record("$(SYS)_$(DEV):PHASE",3860,22,0,0,"$(SYS)_$(DEV):PHASE")
#! Record("$(SYS)_$(DEV):ENABLE_OUTPUT",4100,22,0,0,"$(SYS)_$(DEV):ENABLE_OUTPUT")
#! Record("$(SYS)_$(DEV):CH_GAIN",4340,22,0,0,"$(SYS)_$(DEV):CH_GAIN")
#! Record("$(SYS)_$(DEV):ARB_OFFSET",4580,22,0,0,"$(SYS)_$(DEV):ARB_OFFSET")
#! Record("$(SYS)_$(DEV):TRIG_MODE",20,382,0,0,"$(SYS)_$(DEV):TRIG_MODE")
#! Record("$(SYS)_$(DEV):WF_FILENAME",260,382,0,0,"$(SYS)_$(DEV):WF_FILENAME")
#! Record("$(SYS)_$(DEV):TRIG_SOURCE",500,382,0,0,"$(SYS)_$(DEV):TRIG_SOURCE")
#! Record("$(SYS)_$(DEV):ERROR_CODE",660,140,0,1,"$(SYS)_$(DEV):ERROR_CODE")
