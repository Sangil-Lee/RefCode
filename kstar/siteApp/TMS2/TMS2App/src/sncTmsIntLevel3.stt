program sncTmsIntLevel3
option +r;
option -c;
%% #include <string.h>
%% #include <math.h>

unsigned long tmsIntLevel;
assign tmsIntLevel to "TMS_INTERLOCK_LEVEL_3";
monitor tmsIntLevel;

int intUse;
assign intUse to "TMS_INTERLOCK_USE";
monitor intUse;

int intUseTemp;
assign intUseTemp to "TMS_TEMP_INTERLOCK_ACTIVE";
monitor intUseTemp;

int intUseDisp;
assign intUseDisp to "TMS_DISP_INTERLOCK_ACTIVE";
monitor intUseDisp;

float pfct15Max;
assign pfct15Max to "TMS_PFC15_TOUT_MAX";
monitor pfct15Max;

float pfct67Max;
assign pfct67Max to "TMS_PFC67_TOUT_MAX";
monitor pfct67Max;

float pfbtMax;
assign pfbtMax to "TMS_PFB_TOUT_MAX";
monitor pfbtMax;

float radDisMax;
assign radDisMax to "TMS_RADIAL_DIS_MAX";
monitor radDisMax;

float verDisMax;
assign verDisMax to "TMS_VERTICAL_DIS_MAX";
monitor verDisMax;

float setPFC15Val;
assign setPFC15Val to "TMS_INTERLOCK_L3_PFCT15_SET";
monitor setPFC15Val;

float setPFC67Val;
assign setPFC67Val to "TMS_INTERLOCK_L3_PFCT67_SET";
monitor setPFC67Val;

float setPFBVal;
assign setPFBVal to "TMS_INTERLOCK_L3_PFBT_SET";
monitor setPFBVal;

float setRadDisVal;
assign setRadDisVal to "TMS_INTERLOCK_L3_RAD_DIS_SET";
monitor setRadDisVal;

float setVerDisVal;
assign setVerDisVal to "TMS_INTERLOCK_L3_VER_DIS_SET";
monitor setVerDisVal;

ss tmsInterlock3{
	state tms_interlock_level3{
        	when (delay(0.1) && intUse==1){
			if(intUse==1 && intUseTemp ==1 && intUseDisp==1){
				if((pfct15Max>setPFC15Val) || (pfct67Max>setPFC67Val) || (pfbtMax>setPFBVal) || (fabs(radDisMax)>setRadDisVal) || (fabs(verDisMax)>setVerDisVal)){
        	             		tmsIntLevel=0;
                	     		pvPut(tmsIntLevel);
				}
                		if((pfct15Max<=setPFC15Val) && (pfct67Max<=setPFC67Val) && (pfbtMax<=setPFBVal) && (fabs(radDisMax)<=setRadDisVal) && (fabs(verDisMax)<=setVerDisVal)){
                     			tmsIntLevel=1;
                     			pvPut(tmsIntLevel);
                		}
			}
			if(intUse==1 && intUseTemp ==1 && intUseDisp==0){
				if((pfct15Max>setPFC15Val) || (pfct67Max>setPFC67Val) || (pfbtMax>setPFBVal)){
        	             		tmsIntLevel=0;
                	     		pvPut(tmsIntLevel);
				}
                		if((pfct15Max<=setPFC15Val) && (pfct67Max<=setPFC67Val) && (pfbtMax<=setPFBVal)){
                     			tmsIntLevel=1;
                     			pvPut(tmsIntLevel);
                		}
			}
			if(intUse==1 && intUseTemp ==0 && intUseDisp==1){
				if((fabs(radDisMax)>setRadDisVal) || (fabs(verDisMax)>setVerDisVal)){
        	             		tmsIntLevel=0;
                	     		pvPut(tmsIntLevel);
				}
                		if((fabs(radDisMax)<=setRadDisVal) && (fabs(verDisMax)<=setVerDisVal)){
                     			tmsIntLevel=1;
                     			pvPut(tmsIntLevel);
                		}
			}
			if(intUse==1 && intUseTemp ==0 && intUseDisp==0){
                     			tmsIntLevel=1;
                     			pvPut(tmsIntLevel);
                	}
		} state tms_interlock_level3
                when (intUse==0){
                } state tms_Bypass_interlock_level3
        }
        state tms_Bypass_interlock_level3{
                when (delay(0.1)){
                                if(tmsIntLevel==0){
                                        tmsIntLevel=1;
                                        pvPut(tmsIntLevel);
                                }
                } state tms_interlock_level3
        }
}

