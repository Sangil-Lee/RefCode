#!../../bin/linux-x86/vacuumVVP
## You may have to change vacuumVVP to something else
## everywhere it appears in this file

< envPaths
< ../envCommonIPTables

## prepare env variables and ports definitions
cd ${TOP}/iocBoot/${IOC}
< envPorts
< envVars

cd ${TOP}

## Register all support components
dbLoadDatabase("dbd/vacuumVVP.dbd")
vacuumVVP_registerRecordDeviceDriver(pdbbase)

drvEtherIP_init()
drvEtherIP_define_PLC("plc0", "172.17.101.14",0)
EIP_verbosity(2)
EIP_buffer_limit(494)



## Load record instances

###################################################
# SRSRGA                                          #
##################################################

dbLoadRecords("db/VMS_VV_INIT.db")
dbLoadRecords("db/VMS_VV_FL.db")
dbLoadTemplate("db/VMS_VV_READ.template")



drvGenericSerialConfigure("L11","172.17.101.42:4001",0,0)

#########################################################

#The following command is for a serial line terminal concentrator

#asynOctetSetOutputEos (R0, 0, '\r\n')
#asynOctetSetInputEos (R0, 0, '\n\r')
#asynInterposeFlushConfig(R0,0,5)

#asynSetTraceFile("R0",-1,"")
#asynSetTraceMask("R0",-1,0x02)
#asynSetTraceIOMask("R0",-1,0x4)


## Set this to see messages from mySub
#var mySubDebug 1

# load record instance
cd ${TOP}/iocBoot/${IOC}
< dbLoads

# initialize drivers
cd ${TOP}/iocBoot/${IOC}
< initDrivers

# asSetFilename("accessSecurity")

iocInit()

epicsThreadSleep 2.

#var drvGenericSerialDebug 10


dbpf VMS_VV_RGA_ID "1"
epicsThreadSleep 2.
dbpr VMS_VV_RGA_ID

dbpf VMS_VV_RGA_IN0 "1" 
dbpf VMS_VV_RGA_FL_ON "0" 
dbpf VMS_VV_RGA_CA "1" 


## db list writes to below file ##
#dbl > /root/dbl_vacuumVVP.txt

## Start any sequence programs
#seq sncExample,"user=rootHost"

seq SRSRGA_ON
#< seqLoad
