# RULES_BUILD,v 1.11 2003/09/08 18:22:29 anj Exp
#
#	State notation language (snc) rules
# Each <name>.st (or <name>.stt) produces <name>.c


#--------------------------------------------------
# snc flags

TARGET_SNCFLAGS = $($(basename $@)_SNCFLAGS) $($(basename $@)_SNCFLAGS_$(OS_CLASS))
CPPSNCFLAGS += $(CROSS_CPPFLAGS) $(POSIX_CPPFLAGS) $(EPICS_BASE_CPPFLAGS)\
 $(TARGET_CPPFLAGS) $(USR_CPPFLAGS) $(ARCH_DEP_CPPFLAGS)\
 $(OP_SYS_CPPFLAGS) $(CODE_CPPFLAGS)

#  addons -  concat os specific sequencer flags
ifneq ($(strip $(SNCFLAGS_$(OS_CLASS))),)
SNCFLAGS += $(subst -nil-,,$(SNCFLAGS_$(OS_CLASS)))
else
ifdef SNCFLAGS_DEFAULT
SNCFLAGS += $(SNCFLAGS_DEFAULT)
endif
endif

#--------------------------------------------------
# vpath

vpath %.st $(USR_VPATH) $(ALL_SRC_DIRS)
vpath %.stt $(USR_VPATH) $(ALL_SRC_DIRS)

#--------------------------------------------------
# depends rule needs .c files

SNC_SRC_FILES = $(basename $(notdir $(filter %.st %.stt,$(SRC_FILES))))
SNC_CSRC_FILES =  $(addsuffix .c,$(SNC_SRC_FILES))
HDEPENDS_FILES_YES += $(addsuffix $(DEP),$(basename $(SNC_CSRC_FILES)))

#--------------------------------------------------
# snc executable

ifndef SNC
SNC = $(SNCSEQ_HOST_BIN)/snc$(HOSTEXE)
endif

#--------------------------------------------------
# Rules

%.i: ../%.st
	@echo "preprocessing $<"
	@$(RM) $@
	$(CPP) $(CPPSNCFLAGS) $(INCLUDES) $< > $@

%.c: %.i
	@echo "converting $<"
	@$(RM) $@
	$(SNC) $(TARGET_SNCFLAGS) $(SNCFLAGS) $< -o $@

%.c: ../%.stt
	@echo "converting $< "
	@$(RM) $@
	$(SNC) $(TARGET_SNCFLAGS) $(SNCFLAGS) $< -o $@

clean::
	@$(RM) $(SNC_CSRC_FILES)

