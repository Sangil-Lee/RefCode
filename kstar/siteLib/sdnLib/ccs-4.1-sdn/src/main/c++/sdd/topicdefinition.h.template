#ifndef SDN_<TOPICNAME>_H
#define SDN_<TOPICNAME>_H

#include "sdn/sdn_typedef.h"

#define	<TOPICNAME>	<TOPICNAME>_metadata,<TOPICNAME>_userdata

/*
 * [available variable type]
 *   uint8_t, uint16_t, uint32_t, uint64_t
 *   int8_t,  int16_t,  int32_t,  int64_t
 *   float,   double
 *   * support array type
*/

class PACKED <TOPICNAME>_userdata {
	public:
/*-------- Topic specific userdata should be define here ------------- */
/*----------------- Edit here to add userdata items ------------------ */
};


class <TOPICNAME>_metadata
{
#define	_<TOPICNAME>_NAME			"<TOPICNAME>"
#define	_<TOPICNAME>_DESCRIPTION	"<topic_description>"
#define	_<TOPICNAME>_VERSION		1
#define	_<TOPICNAME>_EVENT			0

	public:
		<TOPICNAME>_metadata()
		{
			name = _<TOPICNAME>_NAME;
			description = _<TOPICNAME>_DESCRIPTION;
			version = _<TOPICNAME>_VERSION;
			payloadsize = sizeof(<TOPICNAME>_userdata);
			is_event = _<TOPICNAME>_EVENT;
			
/* Initialization for the topic specific metadata should be set here  */
/*--------------- Edit here to initialize metadata items ------------ */
			// dummy=1;
		}
		
		const char* getName() const {return name;}
		const char* getDescription() const {return description;}
		unsigned short  getVersion() const {return version;}
		unsigned short  getPayloadsize() const {return payloadsize;}
		char isEvent() const {return is_event;}
		
	private:
		const char* name; 
		const char* description;
		unsigned short version;
		unsigned short payloadsize; 
		char is_event;
		
	public:
/* Functions which get topic specific metadata should be define here  */
/*--------- Edit here to add functions to get metadata items -------- */
		// int32_t  getDummy() const {return dummy;}

	private:
/*---- Topic specific metadata should be defined here (optional)----- */
/*------------------ Edit here to add metadata items ---------------- */
		// int32_t dummy;
};

#endif
